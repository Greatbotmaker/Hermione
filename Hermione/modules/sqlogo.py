LOGO_API_URL1 = "https://techzbotsapi.herokuapp.com/logo?text="

LOGO_API_URL2 = "https://techzbotsapi.herokuapp.com/logo?square=true&text="

from Hermione.services.pyrogram import pbot as app
from Hermione import aiohttpsession as session
import pyrogram
from pyrogram import filters, idle
from pyrogram.errors import FloodWait
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup, Message, CallbackQuery
from typing import Optional
import aiohttp
from Hermione.modules.fsub import ForceSub

async def generate_logo(text: str, square: Optional[bool] = False ):
  "To Create Logos. text = What you want to write on the logo. square = If You Want Square Logo Or Not. Returns Telgraph Image Url"
  
  try:
    square = str(square).capitalize()
  
    if square == "True":
      url = LOGO_API_URL2 + text
    else:
      url = LOGO_API_URL1 + text
  
    resp = await session.get(url)  
    img_url = resp.url
  except Exception as e:
    return "error" + str(e)
      
  return str(img_url)

caption = """
✍️ **Generated Successfully** ✅
`◇───────────────◇`
👩‍💻 **Generated By** : [Hermione](https://t.me/hermioneslbot)
||🙋‍♂ **Requestor** : {} ||
⚡️ **Powered By **  : [TeamHermione](https://t.me/teamhermione) | [TechZ Bots](https://t.me/TechZBots) | [SDBOTs Infinity](https://t.me/SDBOTs_inifinity)
`◇───────────────◇️ ` 
"""

# Commands
@app.on_message(filters.command("tzlogo") & filters.incoming & filters.text & ~filters.forwarded & (
  filters.group | filters.private))
async def logo(bot, message):
  try:
    text = message.text.replace("logo","").replace("/","").replace("@HermioneSlBot","").strip().upper()
    
    if text == "":
      return await message.reply_text(HELP)

    x = await message.reply_text("`🔍 Generating Logo For You...`")  
    logo = await generate_logo(text)

    if "telegra.ph" not in logo:
      return await x.edit("`❌ Something Went Wrong...`\n\nReport This Error In @HermioneSupport_Official")
      
    if "error" in logo:
      return await x.edit(f"`❌ Something Went Wrong...`\n\nReport This Error In @HermioneSupport_Official \n\n`{logo}`")
      
    await x.edit("`🔄 Done Generated... Now Sending You`")

    logo_id = logo.replace("https://telegra.ph//file/","").replace(".jpg","").strip()
    await message.reply_photo(logo,caption=caption.format(message.from_user.mention) ,reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton(text="Upload As File 📁", callback_data=f"flogo {logo_id}")]]))
    await x.delete()
  except FloodWait:
    pass
  except Exception as e:
    try:
      await x.delete()
    except:
      pass
    return await message.reply_text("`❌ Something Went Wrong...`\n\nReport This Error In @HermioneSupport_Official")

# Square Logo
@app.on_message(filters.command("sqlogo") & filters.incoming & filters.text & ~filters.forwarded & (
  filters.group | filters.private))
@ForceSub
async def logo(bot, message):
  try:
    text = message.text.replace("sqlogo","").replace("/","").replace("@HermioneSlBot","").strip().upper()
      
    if text == "":
      return await message.reply_text(HELP)
  
    x = await message.reply_text("`🔍 Generating Logo For You...`")  
    logo = await generate_logo(text,True)
  
    if "telegra.ph" not in logo:
      return await x.edit("`❌ Something Went Wrong...`\n\nReport This Error In @HermioneSupport_Official")
        
    if "error" in logo:
      return await x.edit(f"`❌ Something Went Wrong...`\n\nReport This Error In @HermioneSupport_Official \n\n`{logo}`")
      
    await x.edit("`🔄 Done Generated... Now Sending You`")
    
    logo_id = logo.replace("https://telegra.ph//file/","").replace(".jpg","").strip()
    
    await message.reply_photo(logo,caption=caption.format(message.from_user.mention) ,reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton(text="Upload As File 📁", callback_data=f"flogo {logo_id}")]]))
    await x.edit("**Logo Genarated Successfully 🎉**")
  except FloodWait:
    pass
  except Exception as e:
    await x.edit("`❌ Something Went Wrong...`\n\nReport This Error In @Hermione_Support")

# Callbacks
@app.on_callback_query(filters.regex("flogo"))
async def logo_doc(_,query):
  await query.answer()
  try:
    x = await query.message.reply_text("`🔄 Sending You The Logo As File`")
    await query.message.edit_reply_markup(reply_markup=None)
    link = "https://telegra.ph//file/" + query.data.replace("flogo","").strip() + ".jpg"
    await query.message.reply_document(link,caption=caption)
  except FloodWait:
    pass
  except Exception as e:
    try:
      return await x.edit(f"`❌ Something Went Wrong...`\n\nReport This Error In @HermioneSupport_Official \n\n`{str(e)}`")
    except:
      return
    
  return await x.edit("**Document Genarated Successfully 🎉**")

HELPSTRINGS = """

- /write [TEXT]: Write a text in a page of a book.

Special Credits: Damantha Jasinghe
"""
__mod_name__ = "Wallpaper🏞️"
__help__ = HELPSTRINGS
__funtools__ = HELPSTRINGS
  
